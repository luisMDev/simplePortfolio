{"version":3,"sources":["/Applications/GitHub/simplePortfolio/src/$_lazy_route_resource lazy","/Applications/GitHub/simplePortfolio/src/app/app-routing.module.ts","/Applications/GitHub/simplePortfolio/src/app/app.component.html","/Applications/GitHub/simplePortfolio/src/app/app.component.scss","/Applications/GitHub/simplePortfolio/src/app/app.component.ts","/Applications/GitHub/simplePortfolio/src/app/app.module.ts","/Applications/GitHub/simplePortfolio/src/environments/environment.ts","/Applications/GitHub/simplePortfolio/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;;ACtByC;AACc;AAEvD,IAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,YAAY,EAAE,2CAA2C,EAAE,CAAC,CAAC;AAMjG;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAJ5B,uEAAQ,CAAC;YACR,OAAO,EAAE,CAAC,qEAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,qEAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;ACT7B,wD;;;;;;;ACAA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;ACX0C;AACa;AAOvD;IACE,sBAAY,SAA2B;QACrC,kGAAkG;QAClG,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAE/B,2FAA2F;QAC3F,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAPU,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAEuB,6EAAgB;OAD5B,YAAY,CAQxB;IAAD,mBAAC;CAAA;AARwB;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AAEe;AAET;AAGqB;AACG;AACN;AAIjE,kDAAkD;AAC5C,2BAA4B,IAAgB;IAChD,MAAM,CAAC,IAAI,uFAAmB,CAAC,IAAI,CAAC,CAAC;AACvC,CAAC;AACK,+BAAgC,IAAgB;IACpD,MAAM,CAAC,IAAI,uFAAmB,CAAC,IAAI,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAC;AAClE,CAAC;AAmBD;IAAA;IAAwB,CAAC;IAAZ,SAAS;QAjBrB,uEAAQ,CAAC;YACR,YAAY,EAAE,CAAC,oEAAY,CAAC;YAC5B,OAAO,EAAE;gBACP,gFAAa;gBACb,6EAAgB;gBAChB,8EAAgB;gBAChB,4EAAe,CAAC,OAAO,CAAC;oBACtB,MAAM,EAAE;wBACN,OAAO,EAAE,4EAAe;wBACxB,UAAU,EAAE,qBAAqB;wBACjC,IAAI,EAAE,CAAC,wEAAU,CAAC;qBACnB;iBACF,CAAC;aACH;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;ACvCtB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"../landing/landing.module\": [\n\t\t\"../../../../../src/app/views/landing/landing.module.ts\",\n\t\t\"landing.module\"\n\t],\n\t\"./views/layout/layout.module\": [\n\t\t\"../../../../../src/app/views/layout/layout.module.ts\",\n\t\t\"layout.module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/GitHub/simplePortfolio/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [{ path: '', loadChildren: './views/layout/layout.module#LayoutModule' }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Applications/GitHub/simplePortfolio/src/app/app-routing.module.ts","module.exports = \"<router-outlet>\\n\\n</router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/GitHub/simplePortfolio/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Applications/GitHub/simplePortfolio/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(translate: TranslateService) {\n    // this language will be used as a fallback when a translation isn't found in the current language\n    translate.setDefaultLang('en');\n\n    // the lang to use, if the lang isn't available, it will use the current loader to get them\n    translate.use('en');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Applications/GitHub/simplePortfolio/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\n\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { SocialComponent } from './components/social/social.component';\nimport { BarComponent } from './components/bar/bar.component';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Applications/GitHub/simplePortfolio/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Applications/GitHub/simplePortfolio/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Applications/GitHub/simplePortfolio/src/main.ts"],"sourceRoot":"webpack:///"}